name: CI

on:
  push:
    branches: [ feature/* ]
  workflow_dispatch:

jobs:
  build:
    name: Build/Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Dependencies
        run: go mod tidy

      - name: Build Binary
        run: go build -o monitor

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Start Local Docker Containers for Testing
        run: docker compose -f docker-compose.yml up -d

      - name: Wait for Local Containers to Initialize
        run: sleep 10  # Ensure services are fully started

      - name: Set Up Remote Docker Host (via SSH)
        run: |
          # Simulate a remote Docker host by creating an SSH-accessible Docker environment
          sudo apt-get install -y openssh-server
          sudo systemctl start ssh
          echo "Setting up SSH keys for CI"
          ssh-keygen -t rsa -b 2048 -f /tmp/ci_ssh_key -q -N ""
          mkdir -p ~/.ssh
          cat /tmp/ci_ssh_key.pub >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          ssh-keyscan localhost >> ~/.ssh/known_hosts
          sudo usermod -aG docker $USER

          echo "Docker host setup complete. Use ssh -i /tmp/ci_ssh_key localhost to connect."

      - name: Test Monitor Remote Functionality
        run: |
          echo "🔄 Testing monitor remote --host localhost"
          monitor remote --host localhost || { echo "❌ monitor remote failed"; exit 1; }

      - name: Run Installation Script
        run: |
          python3 install.py

      - name: Verify Monitor Commands
        run: |
          echo "🔄 Testing monitor --service"
          monitor service || { echo "❌ monitor service failed"; exit 1; }

          echo "🔄 Testing monitor --state"
          monitor state || { echo "❌ monitor state failed"; exit 1; }

      - name: Stop and Clean Up Docker Containers
        run: docker compose down
