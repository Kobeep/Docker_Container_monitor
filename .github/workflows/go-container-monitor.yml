name: Go Container Monitor CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build/Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Dependencies
        run: go mod tidy

      - name: Build Binary
        run: go build -o monitor

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin


      - name: Start Docker Containers for Testing
        run: docker compose -f docker-compose.yml up -d

      - name: Wait for Containers to Initialize
        run: sleep 5  # Ensure services are fully started

      - name: Run Monitor Tool and Validate Output
        run: |
          ./monitor | tee monitor_output.txt
          cat monitor_output.txt | grep -q "web1:.*Running.*Available"
          cat monitor_output.txt | grep -q "web2:.*Running.*Available"

      - name: Stop and Clean Up Docker Containers
        run: docker compose down

      - name: Run Go Tests
        run: go test ./...

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: monitor-binary
          path: monitor

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: monitor-binary

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "Release v1.0.${{ github.run_number }}"
          body: "Automated release for GO Container Monitor"
          files: monitor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
